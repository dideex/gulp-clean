// Draw a circle with fixed size and text in center
@mixin circle ($diameter, $bgc)
  display: inline-block
  width: $diameter
  height: $diameter
  background-color: $bgc
  border-radius: 50%
  line-height: ($diameter * .96)
  text-align: center

// Insert a padding with responsive amount
@mixin padding ($top, $left: false, $bottom: false, $right: false)
  @if $right
    padding: #{$top * .1}rem  #{$left * .1}rem #{$bottom * .1}rem  #{$right * .1}rem
  @else 
    @if $bottom
      padding: #{$top * .1}rem  #{$left * .1}rem #{$bottom * .1}rem 
    @else 
      @if $left
        padding: #{$top * .1}rem  #{$left * .1}rem
      @else
        padding: #{$top*.1}rem

// Generate flexable grid
@mixin flex-grid ($count, $margin)
  display: flex
  justify-content: space-between
  flex-wrap: wrap
  & > *
    flex-basis: ((100% - (($count - 1) * $margin)) / $count)
    max-width: ((100% - (($count - 1) * $margin)) / $count)
    margin-bottom: #{$margin}vw

//Create checkerboard background
@mixin checkerboard ($size, $base, $accent: rgba(0,0,0,.25))
  background: $base
  background-image: linear-gradient(45deg, $accent 25%, transparent 0, transparent 75%, $accent 25%), linear-gradient(45deg, $accent 25%, transparent 0, transparent 75%, $accent 25%)
  background-position: 0 0, $size $size
  background-size: $size*2 $size*2

//create beleved cornes
@mixin beveled-corners($bg, $tl:0, $tr:$tl, $br:$tl, $bl:$tr)
  background: $bg
  background: linear-gradient(135deg, transparent $tl, $bg 0) top left, linear-gradient(225deg, transparent $tr, $bg 0) top right, linear-gradient(-45deg, transparent $br, $bg 0) bottom right, linear-gradient(45deg, transparent $bl, $bg 0) bottom left
  background-size: 50% 50%
  background-repeat: no-repeat